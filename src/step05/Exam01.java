/* 주제 : 블록과 변수*/
package step05;

public class Exam01 {
    public static void main(String[] args) {
      int a = 10;
      {
        // int a = 20; // 메서드 블록 안에서 변수를 이중으로 선언할 수 없다.
        a = 20; // 안쪽 블록에서는 바깥쪽 블록의 변수를 사용할 수 있다.
        int b = 30;
      }
      a = 30;
      // b = 40; // 블록이 끝나면 그 블록에 선언된 변수는 삭제된다.
  }
}

/*
4바이트 리터럴 값을 byte, short 메모리에 저장하는 규칙
- 메모리에 저장이 가능하다면 허락한다.

변수는 허락되지 않는다.

리터럴 값들의 연산 결과는 리터럴 값으로 취급한다.
- 리터럴은 값은 연산을 하더라도 변하지 않는다. => 컴파일(번역) 과정에서 검증할 수 있다.
- 기존의 법칙 : 리터럴 값이 비록 4바이트라고 하더라도 메모리에 저장할 수 있다면, 허락한다.

자바의 기본 연산결과는 int이다.
- byte 변수와 byte 변수의 연산 결과는 int 이다.
- short 변수와 short 변수의 연산 결과는 int 이다.

리터럴과 변수의 연산 결과는 변수로 취급된다.
- 변수의 값에 따라 연산 결과가 달라지기 때문에
  메모리에 저장할 수 있는지 확실하지 않다.
  그래서 기본 크기 보다 작은 메모리에 저장하는 것을 허락하지 않는다.
*/
